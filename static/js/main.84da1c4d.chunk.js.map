{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","mobileNumber","setMobileNumber","password","setPassword","setRepeatpassword","dob","setDob","gender","setGender","uiSkills","apiService","devOps","uiSkillDetails","skillset","setSkillset","frontEnds","onGenderChangeValue","e","target","value","console","log","className","onSubmit","preventDefault","onChange","type","name","checked","uiskills","required","multiple","map","uiFrontend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84da1c4d.chunk.js","sourcesContent":["import React ,{useState} from 'react';\r\nimport \"./style.css\";\r\n\r\nexport default function App() {\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber ] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatpassword, setRepeatpassword] = useState(\"\");\r\n  const [dob, setDob] = useState();\r\n  const [gender, setGender] = useState(\"\");\r\n\r\n  const [ skillset, setSkillset ] = useState(\r\n    {\r\n      uiSkills: false,      \r\n      apiService: false,\r\n      devOps: false,\r\n      uiSkillDetails:[],\r\n    }\r\n  )\r\n\r\n  const[frontEnds, setFrontEnds] = useState([\"React\", \"Angular\"]);\r\n\r\n  const handleChange = (e) =>{\r\n    // the default radio button value gets default then later entry (i.e) radio button will give any string as value , \r\n    console.log(`${email}`, `${password}`,`${gender}`)\r\n  }\r\n\r\n  const onGenderChangeValue = (e) =>{\r\n    setGender(e.target.value)\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  const simpleFormSubmit = (e) =>{\r\n      e.preventDefault();\r\n      console.log(`Full name -> ${firstName} ${lastName}`, `username -> ${username}`,`mobileNumber -> ${mobileNumber}`,`Email -> ${email}`, `Password -> ${password}`,`Gender -> ${gender}`,\r\n      `dob -> ${dob}`, `gender -> ${gender}`, 'Skillset->', skillset );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div> <h3>React Form Example</h3></div>\r\n      <form onSubmit={simpleFormSubmit} onChange={handleChange}>\r\n        <div className=\"form-control\">\r\n          <label>First Name</label>\r\n          <input type=\"text\" name=\"firstName\"  onChange={e=>setFirstName(e.target.value)} />  \r\n          </div>\r\n        <div className=\"form-control\">\r\n          <label>Last Name</label>\r\n          <input type=\"text\" name=\"lastName\"  onChange={e=>setLastName(e.target.value)} /> \r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Username</label>\r\n          <input type=\"text\" name=\"username\"  onChange={e=>setUsername(e.target.value)} />   \r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Mobile Number -  input type -Number</label>\r\n          <input type=\"number\" name=\"mobileNumber\"  onChange={e=>setMobileNumber(e.target.value)} />   \r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Email -  input type -email</label>\r\n          <input type=\"email\" name=\"email\"  onChange={e=>setEmail(e.target.value)} />   \r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Password</label>\r\n          <input type=\"password\" name=\"password\" onChange={e=>setPassword(e.target.value)} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Re-type Password -  input type -password</label>\r\n          <input type=\"password\" name=\"repeatpassword\" onChange={e=>setRepeatpassword(e.target.value)} />\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label>Date of Birth -  input type -Date</label>\r\n          <input type=\"date\" name=\"dob\" onChange={e=>setDob(e.target.value)} />\r\n        </div>        \r\n        <div className=\"form-control\" >\r\n          <label>Gender - Radio group button</label>\r\n          <div>\r\n            <input type=\"radio\" value=\"Male\" name=\"gender\" checked={gender === \"Male\"} onChange={onGenderChangeValue}/> Male\r\n            <input type=\"radio\" value=\"Female\" name=\"gender\" checked={gender === \"Female\"} onChange={onGenderChangeValue}/> Female\r\n            <input type=\"radio\" value=\"Other\" name=\"gender\" checked={gender === \"Other\"} onChange={onGenderChangeValue}/> Other\r\n          </div>\r\n        </div>\r\n        <div className=\"form-control\" >\r\n          <label>Skill Set - Checkbox</label>          \r\n            \r\n            <div>\r\n            <label>\r\n              <input\r\n                name=\"acceptedTerms\"\r\n                type=\"checkbox\"\r\n                onChange={e => setSkillset({uiskills: e.target.value})}\r\n                required />UI/Front End:\r\n              \r\n            <select\r\n              name=\"uiSkills\"             \r\n              onChange={e => setSkillset( {uiSkillDetails: e.target.value})}\r\n              required multiple>\r\n              <option key=\"\"></option>\r\n              {frontEnds.map(uiFrontend => (\r\n                <option key={uiFrontend}>{uiFrontend}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label></label>\r\n          <button type=\"submit\">Sign up</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}